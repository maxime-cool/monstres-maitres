openapi: '3.0.2'
info:
  title: Matchmaking
  version: '0.1'
  description: Matchmaking service API - allowing to create matches
tags:
  - name: admins
    description: game admins
  - name: reporters
    description: can extract stats from the game
  - name: users
    description: default
servers:
  - url: http://0.0.0.0:5001/api/matchmaking
paths:
  /list:
    get:
      tags:
        - admins
      summary: returns the list of pending matches (a player is waiting for an opponent)
      responses:
        "200":
          description: got the list of pending matches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPendingMatches'
  /search:
    get: 
      tags:
        - users
      summary: a user wants to play an open match - get the list of open matches
      responses:
        "200":
          description: got the list of pending matches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPendingMatches'

  /make_match:
    post:
      tags:
        - users
      summary: create a match making with an opponent or not
      parameters:
        - name: p1
          in: query
          description: the first player who create the match making
          required: true
          schema:
            type: string
        - name: p2
          in: query
          description: the second player who is invited to the match
          required: false
          style: form
          schema:
            type: string
      responses:
        '201':
          description: matchmaking created successfully
        '409':
          description: User can not create the match

  /join:
    put:
      tags:
        - users
      summary: user to join a making match to crate a match
      parameters:
        - name: matchmaking
          in: query
          description: the id of a matchmaking
          required: true
          style: form
          schema:
            type: string
        - name: player
          in: query
          description: the id of the user want to join this match making
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: match created successfully
        '400':
          description: match can not create

  /delete:    
    delete:
      tags:
        - users
      summary: opponent was found - or p1 wants to cancel their match research
      parameters:
        - name: user_id
          in: query
          description: ID of the user searching for the match
          style: form
          required: true
          schema:
            type: string
      responses:
        '200':
          description: pending match deleted
        '406':
          description: user was not searching for a match
      
components:
  schemas:
    PendingMatch:
      type: object
      required:
        - p1
        - created_at
        - open
        - p2
        - match_create
      properties:
        p1:
          type: integer
          example: 43 # a user id
        created_at:
          type: string
        open: 
          type: boolean
          example: true
        p2:
          type: string
          example: 44 # a user id
        match_create:
          type: boolean
          example: false
    AllPendingMatches:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/PendingMatch'
      