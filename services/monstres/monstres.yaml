openapi: 3.1.0
info:
  title: Monstres API
  summary: This is the API of the Monstres service
tags:
- name: admins
  description: game admins
- name: reporters
  description: can extract stats from the game
- name: users
  description: default
servers:
  - url: http://0.0.0.0:5004/api/monstres
paths:
  /monstre:
    post:
      tags:
      - users
      operationId: create_monstre
      parameters:
        - name: dex_ref
          in: query
          description: reference id of the monstre
          style: form
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: name of the monstre
          style: form
          required: true
          schema:
            type: string
        - name: description
          in: query
          description: description of the monstre
          style: form
          required: true
          schema:
            type: string
        - name: power
          in: query
          description: power level of the monstre
          style: form
          required: true
          schema:
            type: string
        - name: master_id
          in: query
          description: master id of the monstre
          style: form
          required: true
          schema:
            type: string
        - name: team_id
          in: query
          description: team id of the monstre
          style: form
          required: true
          schema:
            type: string
      responses:
        "200":
          description: monstre created successfully
        "400":
          description: monstre can not create
    get:
      tags:
      - users
      operationId: list_monstre
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monstre'

  /monstre/{masterid}:
    get:
      tags:
      - users
      summary: get the monsters from a master
      operationId: get_monsters_by_masterid
      parameters:
      - name: masterid
        in: path
        description: Master ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Monsters of the master
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMonsters'
        "400":
          description: bad input parameter

  /team/{team_id}:
    put:
      tags:
      - users
      operationId: create_team
      parameters:
        - name: id
          in: path
          description: id of the team
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monstre'
components:
  schemas:
    AllMonsters:
      type: array
      items:
        $ref: '#/components/schemas/Monstre'
    Monstre:
      type: object
      required:
        - id
        - name
        - puissance
        - nb_combats
        - nb_victoires
        - master_id 
        - num_equipe
        - monsterdex_ref
        - in_match
      properties:
        id:
          type: int
          example: 1
        name:
          type: string
          example: "Pikachu"
        puissance:
          type: int
          example: 100
        nb_combats:
          type: int 
          example: 5
        nb_victoires:
          type: int 
          example: 4
        master_id:
          type: int 
          example: 2
        num_equipe:
          type: int 
          example: 1
        monsterdex_ref:
          type: int
          example: 3
        in_match:
          type: boolean
          example: false


